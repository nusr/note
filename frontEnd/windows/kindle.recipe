#!/usr/bin/python
# encoding: utf-8

from calibre.web.feeds.recipes import BasicNewsRecipe  # 引入 Recipe 基础类


class Wang_Yin_Blog(BasicNewsRecipe):  # 继承 BasicNewsRecipe 类的新类名

    # ///////////////////
    # 设置电子书元数据
    # ///////////////////
    title = 'Deep Learning'  # 电子书名
    description = 'deep learning'  # 电子书简介
    cover_url = 'https://img3.doubanio.com/view/subject/l/public/s29133163.jpg' # 电子书封面
    # masthead_url = '' # 页头图片
    __author__ = 'Ian Goodfellow and Yoshua Bengio and Aaron Courville'  # 作者
    language = 'en'  # 语言
    encoding = 'utf-8'  # 编码

    # ///////////////////
    # 抓取页面内容设置
    # ///////////////////
    # keep_only_tags = [{ 'class': 'example' }] # 仅保留指定选择器包含的内容
    no_stylesheets = True  # 去除 CSS 样式
    remove_javascript = True  # 去除 JavaScript 脚本
    auto_cleanup = True  # 自动清理 HTML 代码
    delay = 2  # 抓取页面间隔秒数
    max_articles_per_feed = 999  # 抓取文章数量
    articles = [{"title": "Table of Contents", "url": "http://www.deeplearningbook.org/contents/TOC.html"}, {"title": "Acknowledgements", "url": "http://www.deeplearningbook.org/contents/acknowledgements.html"}, {"title": "Notation", "url": "http://www.deeplearningbook.org/contents/notation.html"}, {"title": "1 Introduction", "url": "http://www.deeplearningbook.org/contents/intro.html"}, {"title": "Part I: Applied Math and Machine Learning Basics", "url": "http://www.deeplearningbook.org/contents/part_basics.html"}, {"title": "2 Linear Algebra", "url": "http://www.deeplearningbook.org/contents/linear_algebra.html"}, {"title": "3 Probability and Information Theory", "url": "http://www.deeplearningbook.org/contents/prob.html"}, {"title": "4 Numerical Computation", "url": "http://www.deeplearningbook.org/contents/numerical.html"}, {"title": "5 Machine Learning Basics", "url": "http://www.deeplearningbook.org/contents/ml.html"}, {"title": "Part II: Modern Practical Deep Networks", "url": "http://www.deeplearningbook.org/contents/part_practical.html"}, {"title": "6 Deep Feedforward Networks", "url": "http://www.deeplearningbook.org/contents/mlp.html"}, {"title": "7 Regularization for Deep Learning", "url": "http://www.deeplearningbook.org/contents/regularization.html"}, {"title": "8 Optimization for Training Deep Models", "url": "http://www.deeplearningbook.org/contents/optimization.html"}, {"title": "9 Convolutional Networks", "url": "http://www.deeplearningbook.org/contents/convnets.html"},
                {"title": "10 Sequence Modeling: Recurrent and Recursive Nets", "url": "http://www.deeplearningbook.org/contents/rnn.html"}, {"title": "11 Practical Methodology", "url": "http://www.deeplearningbook.org/contents/guidelines.html"}, {"title": "12 Applications", "url": "http://www.deeplearningbook.org/contents/applications.html"}, {"title": "Part III: Deep Learning Research", "url": "http://www.deeplearningbook.org/contents/part_research.html"}, {"title": "13 Linear Factor Models", "url": "http://www.deeplearningbook.org/contents/linear_factors.html"}, {"title": "14 Autoencoders", "url": "http://www.deeplearningbook.org/contents/autoencoders.html"}, {"title": "15 Representation Learning", "url": "http://www.deeplearningbook.org/contents/representation.html"}, {"title": "16 Structured Probabilistic Models for Deep Learning", "url": "http://www.deeplearningbook.org/contents/graphical_models.html"}, {"title": "17 Monte Carlo Methods", "url": "http://www.deeplearningbook.org/contents/monte_carlo.html"}, {"title": "18 Confronting the Partition Function", "url": "http://www.deeplearningbook.org/contents/partition.html"}, {"title": "19 Approximate Inference", "url": "http://www.deeplearningbook.org/contents/inference.html"}, {"title": "20 Deep Generative Models", "url": "http://www.deeplearningbook.org/contents/generative_models.html"}, {"title": "Bibliography", "url": "http://www.deeplearningbook.org/contents/bib.html"}, {"title": "Index", "url": "http://www.deeplearningbook.org/contents/index-.html"}]
    # ///////////////////
    # 页面内容解析方法
    # ///////////////////

    def parse_index(self):
        # site = 'http://m.gugu5.com/o/yirenzhixia/'  # 页面列表页
        # soup = self.index_to_soup(site)  # 解析列表页返回 BeautifulSoup 对象
        # links = soup.findAll("a", {"rel": "nofollow"})  # 获取所有文章链接
        # articles = []  # 定义空文章资源数组
        # for link in links:  # 循环处理所有文章链接
        #     url = link.get("href")  # 提取文章链接
        #     if not url:
        #         continue
        #     title = link.span.get_text()  # 提取文章标题
        #     item = {'title': title, 'url': url}  # 组合标题和链接
        #     articles.append(item)  # 累加到数组中
        ans = [(self.title, self.articles)]  # 组成最终的数据结构
        return ans  # 返回可供 Calibre 转换的数据结构
